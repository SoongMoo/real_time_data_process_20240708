select * from hr.employees;
select * from hr.employees;
select * from hr.departments;
select department_id ,department_name, manager_id, location_id
from hr.departments;

select department_name, manager_id 
from hr.departments; -- projection

--- 출력하고 싶은데로 열을 나열 해줄 수 있다.
select manager_id, department_id , location_id
from hr.departments;
select * from hr.departments;

--- 리터널 출력
select manager_id, department_id , 30 , '이숭무' from hr.departments;

select * from hr.employees;

select employee_id, first_name, salary + 30 ,salary, 30, manager_id
from hr.employees;

select employee_id, first_name, salary , salary * 12 , manager_id
from hr.employees;

select employee_id, first_name, salary,  salary * 12  + 100 , manager_id
from hr.employees;

select employee_id, first_name, salary,  (salary  + 100) * 12 , manager_id
from hr.employees;

select null * 10 -- 알수 없는 값이다.
from dual;

select employee_id, last_name , hire_date , salary , commission_pct, department_id
from hr.employees;

--- 각사원의 커미션이 얼마인지 출력하세요.
select employee_id, last_name , hire_date , salary , commission_pct
       , salary * commission_pct , department_id
from hr.employees;

---  사원번호, 이름, 성, 급여, 커미션, 커미션을 포함한 년봉도 같이 출력하시오.
select employee_id, first_name, last_name, salary, commission_pct
      , salary  * ( 1 + commission_pct ) * 12
from hr.employees;
--- alias : heading name 변경하기
select employee_id, first_name, last_name, salary , commission_pct comm
      , salary  * ( 1 + commission_pct ) * 12 year_sal
from hr.employees;

--- 대소문자로 heading name 출력
select employee_id, first_name, last_name, salary , commission_pct comm
      , salary  * ( 1 + commission_pct ) * 12 "Year_Sal"
from hr.employees;

--- heading name에 공백문자 포함
select employee_id, first_name, last_name, salary , commission_pct comm
      , salary  * ( 1 + commission_pct ) * 12 "Year Sal"
from hr.employees;
/* 별칭에 공백문자가 있어서 오류 : ""을 해줘야 한다.
select employee_id, first_name, last_name, salary , commission_pct comm
      , salary  * ( 1 + commission_pct ) * 12 Year Sal
from hr.employees;
*/
-- 별칭에 as키워드 주기
select employee_id, first_name, last_name, salary , commission_pct comm
      , salary  * ( 1 + commission_pct ) * 12 as "Year Sal"
from hr.employees;
select employee_id, first_name, last_name, salary , commission_pct comm
      , salary  * ( 1 + commission_pct ) * 12 as Year_Sal
from hr.employees;

--- 연결연산자
select last_name , job_id , employee_id, salary, last_name || job_id 
from hr.employees;
-- 문자열 리터널
select last_name, ' is a ' ,job_id, employee_id, salary
       , last_name || ' is a ' || job_id
from hr.employees;


--- 100의 이름은 King이고 직무는 AD_PRES입니다.
select employee_id || '의 이름은 '|| last_name || '이고' || ' 직무는 '
       || job_id || '입니다.' employee
from hr.employees;

select * from hr.departments;
-- Administration의 manager는 200입니다.
select department_name || '의 manager는 ' || manager_id || '입니다.' manager
from hr.departments;

-- king 1달 월급 = 24000
select last_name || ' 1달 월급 = ' || salary
from hr.employees;

-- Administration department's manager_id 200
select 'Administration department''s manager_id 200'
from dual;
select department_name ||  ' department''s manager_id ' || manager_id
from hr.departments;

select department_name ||  q'[ department's manager_id ]' || manager_id
from hr.departments;

--- 중복 행 제거
select last_name, salary , job_id, department_id
from hr.employees;

select DISTINCT department_id
from hr.employees;

select department_id, job_id
from hr.employees;

select  DISTINCT department_id, job_id
from hr.employees;

-- table 정보 확인
desc hr.employees;  --- DESCRIBE
DESCRIBE hr.employees;

SELECT * from hr.employees;
--1. 각부서 같은 급여를 한번만 출력할때 부서와 급여만 출력하세요,
select DISTINCT department_id , salary  from hr.employees;
--2. 입사일별 같고 직무를 한번만 출력하세요.
select DISTINCT hire_date, job_id from hr.employees;

--- 원하는 컬럼(열)을 출력 : projection
--- 원하는 레코드(행)을 출력 : selection : where이 필요
---                                   : 비교값인 리터널은 대소문자를 구분한다.

--- 사원번호가 100인 사원을 출력
select * from hr.employees;
select * from hr.employees where employee_id = 100;
select * from hr.employees where EMPLOYEE_ID = 100;

--  성이 King인 사원을 모두 출력
SELECT * FROM HR.EMPLOYEES WHERE LAST_NAME = 'King';
select * from hr.employees where last_name = 'KING';
select * from hr.employees where last_name = 'king';

--- 사원들 정보 중 사원번호, 이름 , 급여, 직무를 출력하는
--- 직무가 'FI_ACCOUNT'인 사원들만 출력하세요.
select employee_id, first_name, salary, job_id
from hr.employees
where job_id = 'FI_ACCOUNT';

select employee_id, first_name, salary, job_id
from hr.employees
where job_id = 'FI_Acoount'; -- selection에서는 리터널은 대소문자가 데이터와 일치


--- yy/mm/dd : yy-mm-dd :yy.mm.dd : yyyy-mm-dd
select * from hr.employees;

-- 입사일이 07/02/07인 사원들을 출력하시오.
select * from hr.employees where hire_date = '07/02/07';
select * from hr.employees where hire_date = '07-02-07';
select * from hr.employees where hire_date = '07.02.07';
select * from hr.employees where hire_date = '2007-02-07';
-- 00 ~ 49 -- 2000 ~ 2049
-- 50 ~ 99 -- 1950 ~ 1999

-- 사장보다 먼저 입사한 직원들은 
select * from hr.employees where employee_id = 100;
select * from hr.employees where hire_date < '03/06/17';

--- 급여가 3000달러 이상인 사원을 출력하세요..
select * from hr.employees where salary >= 3000;

-- 사원번호 ,성, 급여, 직무 을 출력하는 데 급여의 열이름을 sal로 한다.
-- 이때 급여가 3000이상인 사원을 출력하시오.
select employee_id, last_name, salary as sal , job_id
from hr.employees
where salary >= 3000; -- where 절에는 별칭을 사용할 수 없다.

--- 급여가 2500부터 3000사이에 있는 직원 이름과 급여를 출력하시오. and | or
select first_name , salary from hr.employees
where salary >= 2500 and salary <= 3000;

select first_name, salary from hr.employees
where salary between 2500 and 3000; 

-- 50, 70, 90인 부서의 직원을 하시오.
select * from hr.employees where department_id = 50;
select * from hr.employees where department_id = 70;
select * from hr.employees where department_id = 90;
select * from hr.employees 
where department_id = 50 or department_id = 70 or department_id = 90;
select * from hr.employees where department_id in (50, 70,90);

-- 직원이름이 'Vance'인직원과 90인 부서의 직원을 출력하시오,
select * from hr.employees where first_name = 'Vance' or department_id = 90;
--성이름이 'Hartstein', 'Vargas' 인 사원들을 출력하시오.
select * from hr.employees
where last_name in ('Hartstein', 'Vargas');
// where last_name = 'Hartstein' or last_name= 'Vargas'

---3. 100, 101, 201인 상사(manager_id)를 둔 직원들을 모두 출력하시오.
select * from hr.employees where manager_id in (100, 101, 201);
---3-1. 100, 101, 201인 상사(manager_id)가 아닌 직원들을 모두 출력하시오.
select * from hr.employees where manager_id not in (100, 101, 201);
---4. 50인부서와 60인 부서와 70인 부서의 직원을 구하시오
select * from hr.employees where department_id in (50,60,70);
select * from hr.employees where department_id between 50 and 70;
---4-1 50인부서와 60인 부서와 70인 부서가 아닌 직원을 구하시오
select * from hr.employees where department_id not in (50,60,70);
select * from hr.employees where department_id not between 50 and 70;
---5. 03/06/17, 01/01/13, 07/03/17에 입사한 직원들을 출력하시오.
select * from hr.employees where hire_date in ('03/06/17','01/01/13','07/03/17');
---5-1 03/06/17, 01/01/13, 07/03/17에 입사하지 않은 직원들을 출력하시오.
select * from hr.employees 
where hire_date  not in ('03/06/17','01/01/13','07/03/17');
-- 6. 급여가 3000미만이고 10000을 초과한 직원들을 구하시오.
select * from hr.employees where salary not between 3000 and 10000;
select * from hr.employees where salary < 3000 or salary > 10000;

--- 부서가 없는 직원을 출력하시오.
select * from hr.employees where department_id is null;
-- 부서를 가진 직원들을 출력하시오.
select * from hr.employees where department_id is not null;

-- 성이 'K'로 시작하는 모든 사원들
select * from hr.employees where last_name like 'K%'; --% 0개 이상의 문자
-- 성이 'k'로 끝나는 모든 사원들
select * from hr.employees where last_name like '%k'; 
-- 'k'를 포함하는 직원 : k% , %k, %k%
select * from hr.employees where last_name like '%k%'; 
--성에 in이 포함된 직원들을 출력하세요.
select * from hr.employees where last_name like '%in%';

-- 성에 첫글자는 아무 문자나 관계없지만 두번째 글자가 u인 사원을 출력하시오.
select * from hr.employees where last_name like '_u%';
-- 성에 세번째 글자에 s가 오는 사원들은?
select * from hr.employees where last_name like '__u%';
-- 성에 뒤에서 두번째 글자가 i인 사원들을 출력하시오.
select * from hr.employees where last_name like '%u_';
-- 성에 u와 i상이에 한글자를 포함하는 사원들으 출력하시오.
select * from hr.employees where last_name like '%u_i%';

select job_id from hr.employees; -- AC_ACCOUNT
-- 직무가 AC_로 시작하는 사원들을 출력
select * from hr.employees where job_id like 'AC\_%' escape '\';
-- 직무가 D_P를 포함한 사원들을 출력하시오.
select * from hr.employees where job_id like '%D\_P%' escape '\';
