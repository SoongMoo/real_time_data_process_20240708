create table member(
    member_num number ,
    member_name VARCHAR2(50),
    member_id VARCHAR2(50),
    constraint member_num_PK primary key(member_num)
);
drop table board;
create table board(
    board_num number,
    board_writer varchar2(100),
    board_subject VARCHAR2(100),
    board_content varchar2(2000),
    member_num number,
    constraint board_num_PK primary key(board_num),
    constraint member_num_FK foreign key(member_num) 
    REFERENCES member(member_num)
);
--- member
insert into member(member_num, member_name, member_id)
values(1, '숭무', 'high');
-- board
insert into board (board_num, board_writer, board_subject, board_content 
                 , member_num)
values(10, '글쓴이', '제목', '내용',1 );
insert into board (board_num, board_writer, board_subject, board_content 
                 , member_num)
values(20, '글쓴이', '제목', '내용',1 );
select * from board;
-- 부모 데이터 삭제 안됨.
delete from member 
where member_num = 1;  --- child record found
-----
delete from board
where member_num = 1;
select * from board where member_num = 1;
delete from member 
where member_num = 1;
select * from member;
--------
drop table board;
create table board( -- 자식테이블
    board_num number,
    board_writer varchar2(100),
    board_subject VARCHAR2(100),
    board_content varchar2(2000),
    member_num number ,
    constraint board_num_PK primary key(board_num),
    constraint member_num_FK foreign key(member_num) 
    REFERENCES member(member_num) on delete CASCADE
);
--- member
insert into member(member_num, member_name, member_id)
values(1, '숭무', 'high');
select * from member;
-- board
insert into board (board_num, board_writer, board_subject, board_content 
                 , member_num)
values(10, '글쓴이', '제목', '내용',1 );
insert into board (board_num, board_writer, board_subject, board_content 
                 , member_num)
values(20, '글쓴이', '제목', '내용',1 );
select * from board;

delete from  member
where member_num = 1; 
select * from board;
select * from member;
-------------------------------------------------------------
drop table board;
create table board(
    board_num number,
    board_writer varchar2(100),
    board_subject VARCHAR2(100),
    board_content varchar2(2000),
    member_num number ,
    constraint board_num_PK primary key(board_num),
    constraint member_num_FK foreign key(member_num) 
    REFERENCES member(member_num) on delete set null
);
--- member
insert into member(member_num, member_name, member_id)
values(1, '숭무', 'high');
select * from member;
-- board
insert into board (board_num, board_writer, board_subject, board_content 
                 , member_num)
values(10, '글쓴이', '제목', '내용',1 );
insert into board (board_num, board_writer, board_subject, board_content 
                 , member_num)
values(20, '글쓴이', '제목', '내용',1 );
select * from board;
---- 
delete from member
where member_num = 1;
select * from member;
select * from board;

-----------not null, primary key, foreign key, unique

---- ckeck constraint
drop table employees_1;
create table employees_1(
    employee_id number(6),
    first_name varchar2(30),
    last_name varchar2(20),
    email varchar2(100),
    salary number default 0, --- -200
    value1 integer not null,-- 10
    value2 number, -- 11
    city varchar2(20),-- '서울', '인천', '부산', '대구', '대전'
    gender char(1),
    constraint employee_id_PK primary key(employee_id),
    constraint salary_CK check(salary >= 0),
    constraint ch_value1_CK check (value1 between 1 and 100),
    constraint value1_value2_CK check(value2 > value1),
    constraint city_CK check (city in ('서울', '인천', '부산', '대구', '대전') ),
    constraint gender_CK check (gender in ('M','F'))  
);
insert into employees_1(employee_id, first_name, last_name, email
                    ,salary)
values(1, '숭무','이', 'high', 10);
select * from employees_1;
insert into employees_1(employee_id, first_name, last_name, email
                    ,salary, value1,  value2)
values(2, '숭무','이', 'high', 10 , 10, 11);
select * from employees_1;
insert into employees_1(employee_id, first_name, last_name, email
                    ,salary, value1,  value2, city)
values(3, '숭무','이', 'high', 10 , 10, 11, '대구');
select * from employees_1;
insert into employees_1(employee_id, first_name, last_name, email
                    ,salary, value1,  value2, city, gender)
values(4, '숭무','이', 'high', 10 , 10, 11, '대구', 'M');
select * from employees_1;

drop table dept;
create table dept   --- 다른 테이블 복사하기
(deptno, deptname,  mngid , locid)
as
select * from hr.departments;

select * from dept;

drop table employees;
create table employees  --- 다른 테이블 복사하기
as
select * from hr.employees;  --- 서브쿼리
select * from employees;
-----------
drop table departments;
desc hr.departments;
create table departments(
    department_id number(4) not null,
    department_name varchar2(30),
    manager_id number(6)
);
insert into departments (department_id,department_name, manager_id)
values(100, '영업부', 200);
select * from departments;

alter table departments
add (location_id NUMBER(4));
select * from departments;

drop table departments;
create table departments(
    department_id number(4) not null,
    department_name varchar2(30),
    manager_id number(6)
);
SELECT * FROM DEPARTMENTS;
ALTER TABLE DEPARTMENTS
ADD (LOCATION_ID NUMBER(6) NOT NULL);

drop table departments;
create table departments(
    department_id number(4) not null,
    department_name varchar2(30)
);
SELECT * FROM DEPARTMENTS;
ALTER TABLE DEPARTMENTS
ADD ( MANAGER_ID NUMBER(6),
      LOCATION_ID NUMBER(6) NOT NULL);

---- alter : 테이블 정보를 변경할 때 사용
/*
• 새 열 추가
• 기존 열 정의 수정
• 새 열에 기본값 정의
• 열 삭제
• 열 이름 바꾸기
• 제약 조건 추가
• 제약 조건 삭제
*/
DESC DEPARTMENTS;
SELECT * FROM DEPARTMENTS;
INSERT INTO DEPARTMENTS
VALUES(100, '영업부', 170, 1700);


ALTER TABLE DEPARTMENTS
MODIFY (DEPARTMENT_NAME DATE);
--- "column to be modified must be empty to change datatype"
ALTER TABLE DEPARTMENTS
MODIFY (MANAGER_ID VARCHAR2(20));
--- "column to be modified must be empty to change datatype
ALTER TABLE DEPARTMENTS
MODIFY (MANAGER_ID NUMBER(9, 3));
ALTER TABLE DEPARTMENTS
MODIFY (DEPARTMENT_NAME VARCHAR2(1000));
--- Table DEPARTMENTS이(가) 변경되었습니다.
DESC DEPARTMENTS;
DROP TABLE DEPARTMENTS;
CREATE TABLE DEPARTMENTS(
    DEPARTMENT_ID NUMBER(4),
    DEPARTMENT_NAME VARCHAR2(100),
    MANAGER_ID NUMBER(6),
    LOCATION_ID NUMBER(4)
);
ALTER TABLE DEPARTMENTS
MODIFY(DEPARTMENT_NAME NUMBER);

DROP TABLE DEPARTMENTS;
CREATE TABLE DEPARTMENTS(
    DEPARTMENT_ID NUMBER(4),
    DEPARTMENT_NAME VARCHAR2(100),
    MANAGER_ID NUMBER(6)
);
ALTER TABLE DEPARTMENTS
ADD ( LOC_ID  NUMBER(6) DEFAULT 1700);

INSERT INTO DEPARTMENTS(DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID)
VALUES(100, '영업부', 170);
SELECT * FROM DEPARTMENTS;

ALTER TABLE DEPARTMENTS
MODIFY MANAGER_ID  DEFAULT 170;

INSERT INTO DEPARTMENTS(DEPARTMENT_ID, DEPARTMENT_NAME)
VALUES(200, '영업부');
SELECT * FROM DEPARTMENTS;

ALTER TABLE DEPARTMENTS
RENAME COLUMN  LOC_ID TO LOCATION_ID;

ALTER TABLE DEPARTMENTS
DROP COLUMN LOCATION_ID;
/*
ALTER TABLE TABLE명 
ADD
MODIFY
DROP
RENAME 
*/
desc departments;

alter table departments
MODIFY DEPARTMENT_ID primary key;

select * from USER_constraints where table_name = 'DEPARTMENTS';

ALTER TABLE departments
DROP CONSTRAINT SYS_C007113;

alter table departments  --- 열레벨
MODIFY DEPARTMENT_ID CONSTRAINT DEPARTMENT_ID_PK primary key;

select * from USER_constraints where table_name = 'DEPARTMENTS';

ALTER TABLE DEPARTMENTS
RENAME CONSTRAINT DEPARTMENT_ID_PK TO DEPT_ID_pk;

ALTER TABLE DEPARTMENTS
DROP CONSTRAINT DEPT_ID_pk;

ALTER TABLE DEPARTMENTS
ADD CONSTRAINT DEPT_ID_PK PRIMARY KEY(DEPARTMENT_ID);

select * from USER_constraints where table_name = 'DEPARTMENTS';


DROP TABLE BOARD;
CREATE TABLE BOARD(
    BOARD_NUM NUMBER,
    BOARD_WRITER VARCHAR2(30),
    BOARD_SUBJECT VARCHAR2(100),
    BOARD_CONTENT VARCHAR2(2000),
    READ_COUNT NUMBER,
    MEMBER_NUM NUMBER
);

ALTER TABLE BOARD
ADD ( CONSTRAINT BOARD_NUM_PK PRIMARY KEY(BOARD_NUM)
     ,CONSTRAINT MEMBER_NUM_FK FOREIGN KEY(MEMBER_NUM)
      REFERENCES MEMBER(MEMBER_NUM));
DROP TABLE A;
DROP TABLE B;
DROP TABLE C;
DROP TABLE D;
CREATE TABLE A(
    A INTEGER
);
CREATE TABLE B(
    B INTEGER,
    A INTEGER
);
CREATE TABLE C(
    C INTEGER,
    B INTEGER,
    A INTEGER
);
CREATE TABLE D(
    D INTEGER,
    A INTEGER
);
ALTER TABLE A
ADD CONSTRAINT A_PK PRIMARY KEY(A);

INSERT INTO A(A) VALUES(1);


ALTER TABLE B
ADD CONSTRAINT A_B_PK PRIMARY KEY(a, b);

INSERT INTO B(A, B) VALUES(1, 1);
INSERT INTO B(A,b) VALUES(1,2);

ALTER TABLE C
ADD CONSTRAINT A_B_C_PK PRIMARY KEY (A,B,C);

INSERT INTO C(A,B,C) VALUES(1,1, 3);
INSERT INTO C(A,B,C) VALUES(1,2, 3);
INSERT INTO C(A,B,C) VALUES(1,2, 5);

ALTER TABLE D
ADD CONSTRAINT D_PK PRIMARY KEY(D);
-------
ALTER TABLE B
ADD CONSTRAINT B_FK FOREIGN KEY(A)
    REFERENCES A(A) ON DELETE CASCADE;

ALTER TABLE C
ADD CONSTRAINT A_B_FK FOREIGN KEY (A, B)
    REFERENCES B(A, B) ON DELETE CASCADE;

ALTER TABLE d
ADD CONSTRAINT A_FK FOREIGN KEY(A)
   REFERENCES A(A) ON DELETE SET NULL;

INSERT INTO D (A,D) VALUES(1,5);
SELECT * FROM A;
SELECT * FROM B;
SELECT * FROM C;
SELECT * FROM D;

DELETE FROM a;
