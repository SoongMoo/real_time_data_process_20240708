select * from hr.employees;
    
-- 숫자함수
select round(15.19345, 3), round(15.19355, 3)  -- 반올림
     , round(145.5553, 2), round(145.5553, 1)
     , round(145.5553, 0), round(145.5553)
     , round(145.5553, -1), round(145.5553, -2), round(155.5553, -2)
from dual;    
select trunc(15.19345, 3), trunc(15.19355, 3) -- 절삭
     , trunc(145.5553, 2), trunc(145.5553, 1)
     , trunc(145.5553, 0), trunc(145.5553)
     , trunc(145.5553, -1), trunc(145.5553, -2), trunc(155.5553, -2)
from dual;    
--- 직원의 급여를 5000으로 나눈 나머지가 2000부터 3000사이인 직원들을 구하시오.

select first_name, employee_id, last_name,hire_date, salary, mod(salary, 5000)
from hr.employees
where mod(salary, 5000) between 2000 and 3000;
--- 직무가 SA_REP인 사원들의 급여를 5000으로 나눈 나머지가 얼마인가.
--- 사원번호, 이름, 직무, 급여를 같이 출력
select employee_id, first_name, job_id, salary, mod(salary, 5000)
from hr.employees
where job_id = 'SA_REP';

-- 2024/07/26 -- 21
-- 1999/05/27 -- 21
--   20    24   07   26   10    30   20
--- 세기   년도  월    일   시    분    초

--- 현재 날짜
select sysdate from dual;

select first_name, last_name, salary, job_id, '2024-05-27', sysdate
from hr.employees;
-- select now() 
/*
-- '2024-05-27'는 현재날짜로 부터 몇지났을 까요?
select (sysdate -  '2024-05-27' )
from dual;
*/
--- 입사일로 현재 날짜까지 얼마나 지났을까?
select first_name, salary, employee_id, job_id
      , sysdate - hire_date
from hr.employees;

--- 입사일로 현재 날짜까지 몇주가 되었을까?
select first_name, salary, employee_id, job_id
      , (sysdate - hire_date) / 7 
from hr.employees;
-- 입사한후 현재까지 몇달지났을까요?
select first_name, salary, job_id,department_id, 
       months_between(sysdate, hire_date)
from hr.employees;
-- 입사한후 현재까지 몇년지났을까요?
select first_name, salary, job_id,department_id, hire_date
      ,trunc(months_between(sysdate, hire_date) /12) as year
from hr.employees;
-- 이번달의 마지막 날은?
select last_day(sysdate) from dual;
-- 입사한 달의 마지막 날은?
select first_name, employee_id, hire_date, last_day(hire_date)
from hr.employees;
---  입사한달이 윤년인 사원을 출력하세요.
select first_name, employee_id, hire_date, last_day(hire_date)
from hr.employees
where last_day(hire_date) like '%/02/29';

--- 현재날짜에서 3개월 후는 언제인가?
select add_months(sysdate, 3) from dual;

-- 입사한 직원이 5개월 지난 날짜가 7월인 사원을 출력하시오.
select first_name, job_id, hire_date, add_months(hire_date, 5)
from hr.employees
where add_months(hire_date, 5) like '%/07/%';

--- 다음 금요일은?
select next_day(sysdate, '목'), next_day(sysdate, '금요일')
from dual;

-- 입사한 날에서 다음 금요일이 08월 02일인 직원은?
--- 사원번호, 이름, 직무, 입사일도 같이 출력
select employee_id, first_name, job_id, hire_date, next_day(hire_date, '월')
from hr.employees
where next_day(hire_date, '월') like '%/08/02';

-- 현재날짜의 주의 시작일인 일요일의 날짜와 주의 마지막날짜인 토요일 날짜를 출력하시오.
select next_day(sysdate -7,'일'),next_day(sysdate-7,'일') + 6 from dual; 
--- 24/07/21과 24/07/27일이 출력

--- 직원이 입사한날이 그주의 몇일 부터 몇일 사이에 있는 날인 지 출력하세요.
--- 성, 이름 , 입사일 , 입사한 주의 일요일, 입사한 주의 토요일
select  last_name, first_name, hire_date
        ,next_day(hire_date -7 ,'일') ,  next_day(hire_date -7 ,'일') + 6
from hr.employees;

select '30' + 30, to_number('30') + 30
from dual;

select '이숭무' || 30 , concat( '이숭무' , 30)
from dual;

---- 24/07/26  =>  yy-mm-dd                   yyyy-mm-dd
select sysdate, to_char(sysdate, 'yy-mm-dd'), to_char(sysdate, 'yyyy-mm-dd')
      ,to_char(sysdate, 'yyyy-mm-dd hh:mi:ss PM')
      ,to_char(sysdate, 'yyyy-mm-dd hh24:mi:ss PM')
from dual;
---  'yy-mm-dd'인것을 'mm-dd-yy 월요일' 로 출력했으면 좋겠다.
--- 사원번호 , 직무 , 이름 , 입사일을 출력하세요.
select employee_id, job_id, first_name, hire_date
      , to_char(hire_date,'mm-dd-yy day') 
      , to_char(hire_date,'mm-dd-yy dy') 
from hr.employees;
----- 숫자를 문자로 : 999999 => $999,999
select to_char(123456789,'999,999,999,999') --123,456,789
from dual;
select to_char(123456789,'099,999,999,999') --0123,456,789
from dual;
select to_char(123456789,'$99,999,999,999') 
from dual;
select to_char(123456789,'L99,999,999,999') -- local
from dual;
select to_char(-23456789,'99,999,999,999mi') 
from dual;
select to_char(-23456789,'L99,999,999,999mi') 
from dual;

--- 사원번호, 부서번호, 상사, 입사일, 급여를 출력할때
-- 급여를 3자리씩 표시하면 좋겠다.
select employee_id , department_id, manager_id, hire_date
      , to_char(salary,'$99,999,999') , to_char(commission_pct, '999,999.00')
from hr.employees;


--- 29-07-2004년에 입사한 사원을 출력하시오.
select * from hr.employees 
where hire_date = '04-07-29';

select * from hr.employees -- yy/mm/dd
where hire_date = to_date('29-07-04','dd-mm-yy');

--- 17/06/03(dd-mm-yy)일 때 이 날짜 이후에 입사한 직원들 출력하시오.
select * from hr.employees
where hire_date >= to_date('17/06/03', 'dd-mm-yy');
--- 17/06/03(dd-mm-yy)의 주는 몇일 부터 몇일 사이애 있나요?
select next_day(to_date('03/06/17','yy-mm-dd') -7, '일')
    ,  next_day(to_date('03/06/17','yy-mm-dd') -7, '일') + 6
from dual;

select next_day(to_date('17/06/03','dd-mm-yy') -7, '일')
    ,  next_day(to_date('17/06/03','dd-mm-yy') -7, '일') + 6
from dual;

--- 사원번호, 이름, 직무, 급여, 커미션, 년봉
select employee_id , first_name, job_id, commission_pct
      ,  salary * (1 + commission_pct) * 12  year_sal
from hr.employees;

select employee_id , first_name, job_id, salary, commission_pct
      , nvl(commission_pct, 0)
      , salary * (1 + nvl(commission_pct,0)) * 12  year_sal
from hr.employees;

select employee_id , first_name, job_id, salary, commission_pct
      , COALESCE(commission_pct, 0)
      , salary * (1 + COALESCE(commission_pct,0)) * 12  year_sal
from hr.employees;

select COALESCE(null, 10, 20, 30), COALESCE(null, null, 20, 30)
      , COALESCE(null, null, null, 30)
      , COALESCE(null, 10)
from dual;

select nvl2('이', 10, 20) , nvl2(null, 10, 20)
from dual;
--- 사원번호, 이름, 직무, 급여, 커미션, 년봉 -- nvl2()
select * from hr.employees;
select employee_id, first_name, job_id, salary, commission_pct
      ,salary * (1 + nvl(commission_pct, 0)) * 12 year_nvl
      ,salary * nvl2(commission_pct, 1 + commission_pct, 1) * 12 year_nvl2
      ,salary * (1 + COALESCE(commission_pct, 0)) * 12 year_COALESCE
from hr.employees;
-- nullif
select nullif(100,100), nullif(10, 2000)
from dual;

-- 이름과 성의 길이가  같은 사람만 출력하시오.
select first_name, last_name, length(first_name), length(last_name)
      ,nullif(length(first_name), length(last_name))
from hr.employees
where nullif(length(first_name), length(last_name)) is null;
---  nvl, nvl2, COALESCE, nullif

-------------------------
--- 조건문 : CASE, DECODE 
--- 'IT_PROG' 이면 급여를 10% 더 주고
--- 'ST_CLERK'이면 급여를 15% 더 주고
--- 'SA_REP'이면 급여를 20% 더준다. 
--- 나머지 직무는 급여 그대로
--------------------
/*
switch(job_id){
    case "SA_REP" : salary * 0.1
    case "SA_REP" : salary * 0.1
    case "SA_REP" : salary * 0.1
    default : salary
}
*/
select first_name, job_id, salary 
    , case job_id when 'IT_PROG' then    salary * 0.1
                  when 'ST_CLERK' then    salary * 0.2
                  when 'SA_REP' then    salary * 0.3
                  else salary end as sal
from hr.employees;

select first_name, job_id, salary 
    , case when job_id = 'IT_PROG' then    salary * 0.1
           when job_id = 'ST_CLERK' then    salary * 0.2
           when job_id = 'SA_REP' then    salary * 0.3
           else salary end as sal
from hr.employees;
--- 급여가 5000이하면 low를  10000이하면 'Medium'  20000이하면 'Good'
--- 그 이상이면 'Excellent'가 출력되게 하시오.
select first_name, salary
      , case when salary < 5000 then 'low'
             when salary < 10000 then 'Medium'
             when salary < 20000 then 'Good'
             else 'Excellent' end as sal
from hr.employees;

--- salary / 2000 나눈값의 몫이 0이면 0
--                            1이면 0.09
--                            2이면 0.20
--                            3이면 0.30
--                            4이면 0.40
--                            아니면 0.50 출력하세요.
select first_name , salary
      ,case trunc(salary / 2000) when 0 then 0
                                 when 1 then 0.09
                                 when 2 then 0.20
                                 when 3 then 0.30
                                 when 4 then 0.40
                                 else 0.50 end tax
from hr.employees;

select first_name , salary
      ,decode (trunc(salary / 2000)   , 0 , 0
                                     , 1 , 0.09
                                     , 2 , 0.20
                                     , 3 , 0.30
                                     , 4 , 0.40
                                     , 0.50) as tax
from hr.employees;
select first_name, job_id, salary 
    , decode (job_id , 'IT_PROG' ,    salary * 0.1
                     , 'ST_CLERK' ,    salary * 0.2
                     , 'SA_REP' ,    salary * 0.3
                     , salary)  as sal
from hr.employees;
